name: System Test
on:
  workflow_dispatch:
    inputs:
      releaseUrl:
        description: The URL to the release file
        required: true
      runner:
        description: The runner this job should run on
        required: true
        default: ubuntu-20.04

jobs:

  test:
    name: Test
    runs-on: "{{ github.event.inputs.runner }}"

    env:
      CLUSTER: "kind"

    steps:

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: |
          sudo apt-get install gcc libssl-dev

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add .local/bin to path
        run: |
          mkdir -p "$HOME/.local/bin"
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install drg
        run: |
          curl -sL https://github.com/drogue-iot/drg/releases/download/v0.5.1/drg-0.5.1-linux-amd64.tar.gz -o drg.tar.gz
          tar --strip-components=1 -xvzf drg.tar.gz
          mv drg "$HOME/.local/bin"

      - name: Install geckodriver
        run: |
          curl -sL https://github.com/mozilla/geckodriver/releases/download/v0.29.1/geckodriver-v0.29.1-linux64.tar.gz -o geckodriver.tar.gz
          tar -xzvf geckodriver.tar.gz
          mv geckodriver "$HOME/.local/bin"

      - name: Install helm
        run: |
          curl -sL https://get.helm.sh/helm-v3.6.0-linux-amd64.tar.gz -o helm.tar.gz
          tar xzf helm.tar.gz
          mv linux-amd64/helm "$HOME/.local/bin"

      - name: Download release
        run: |
          mkdir release
          cd release
          curl -sL "${{ github.event.inputs.releaseUrl }}" -o release.zip
          unzip release.zip
          mv drogue-install-*/* .
          find .

      - name: Check for installer script
        run: |
          cd release
          test -x ./scripts/drgadm

      - name: Create Kind cluster
        uses: helm/kind-action@v1.1.0
        with:
          wait: 300s
          cluster_name: kind
          config: kind/cluster-config.yaml

      - name: Deploy Drogue
        env:
          DEBUG: "true"
        run: |
          cd release
          ./scripts/drgadm deploy -m
        timeout-minutes: 20

      - name: Run tests
        run: |
          make CLUSTER=kind HEADLESS=true
